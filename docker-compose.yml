version: '3.9'
services:
  postgres:
    container_name: postgres
    image: postgres:12
    hostname: database
    volumes:
      - db_data:/var/lib/postgres
    environment:
      - POSTGRES_DB=wallet
      - POSTGRES_USER=wallet
      - POSTGRES_PASSWORD=wallet
    networks:
      - wallet-network
    ports:
      - "5430:5432"
  webapi:
    build:
      dockerfile: Dockerfile
      context: .
    hostname: webapi
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - wallet-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/wallet
      - POSTGRES_USER=wallet
      - POSTGRES_PASSWORD=wallet
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_URL=http://minio:9000
    healthcheck:
      test: curl http://webapi:8080 || exit 0
      interval: 10s
      retries: 5
      start_period: 15s
      timeout: 10s
  redis:
    image: redis:latest
    command: redis-server --requirepass redis_pass --port 6380
    environment:
      - REDIS_PASSWORD=redis_pass
    ports:
      - "6380:6380"
    volumes:
      - ./redisdata:/data
    networks:
      - wallet-network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "redis_pass", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./miniodata:/miniodata
      - ./minioconfig:/root/.minio
    networks:
      - wallet-network
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
    command: server /data --console-address ":9001"
networks:
  wallet-network:
    driver: bridge

volumes:
  db_data: